Collections:

Counter will take a collection of data like list or tuple or ditionary and will return a dictionary with the value as the key and the count
as the value.

from collections import Counter
value = [1, 2, 3, 4, 1, 2, 6, 7, 3, 8, 1]
cnt = Counter(value)

o/p: {1: 3, 2: 2, 3: 2, 4: 1, 6: 1, 7: 1, 8: 1}

This will give the list of all the keys for the number of times present in the values.

print(list(cnt.elements()))
print(cnt.most_common())

deduct = {1:1, 2:2}
cnt.subtract(deduct)

This will give the number of elements and values ordered in decresing order of count and within that in decreasing order of the 
value of the key. The value of deduct is used to remove the value from the actual for the specified number of times.


Default Dictionary:

This is like dictionary but if the key value is not found it will not return an error instead it will assign it to a default value.

from collections import defaultdict
dict = defaultdict(int)
dict['one'] = 1
dict['two'] = 2
print(dict['three']) 

Output: 0

Ordered Dictionary:

The values are maintained in the order that they are inserted.

dict = OrderedDict()
dict['a'] = 1
dict['b'] = 2

for key, value in dict.items():
    print(key, value)
    
Dequeue:

This is like a queue in which the insertion and deletion can be done from both the ends. count and clear functions can also be used.

deq = Dequeue(list('a', 'b', 'c'))
deq.append('d')        appends to the right
deq.appendleft('e')    appends to the left
deq.pop()              removes from the end of the list
deq.popleft()          removes from the beginning of the list
deq.clear()            clears the list
de.count('a')          counts the number of a's present in the list



 


  
